From b31b15c22a74dddf550238372b2d963e8344ff17 Mon Sep 17 00:00:00 2001
From: De Huo <De.Huo@windriver.com>
Date: Fri, 9 Aug 2019 16:23:27 +0800
Subject: [PATCH] Rule audit_rules_execution_chcon add oval check and
 remediate scripts

Rule audit_rules_execution_chcon add oval check and remediate scripts

Upstream-Status: Pending

Signed-off-by: De Huo <De.Huo@windriver.com>
---
 .../bash/wrlinux1019.sh                            | 21 ++++++++++
 .../oval/wrlinux1019.xml                           | 46 ++++++++++++++++++++++
 2 files changed, 67 insertions(+)
 create mode 100644 linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/bash/wrlinux1019.sh
 create mode 100644 linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/oval/wrlinux1019.xml

diff --git a/linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/bash/wrlinux1019.sh b/linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/bash/wrlinux1019.sh
new file mode 100644
index 0000000..bbddfa5
--- /dev/null
+++ b/linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/bash/wrlinux1019.sh
@@ -0,0 +1,21 @@
+# platform = multi_platform_wrlinux
+
+# Include source function library.
+. /usr/share/scap-security-guide/remediation_functions
+
+# First perform the remediation of the syscall rule
+# Retrieve hardware architecture of the underlying system
+# Note: 32-bit kernel modules can't be loaded / unloaded on 64-bit kernel =>
+#       it's not required on a 64-bit system to check also for the presence
+#       of 32-bit's equivalent of the corresponding rule. Therefore for
+#       each system it's enought to check presence of system's native rule form.
+[ $(getconf LONG_BIT) = "32" ] && RULE_ARCHS=("b32") || RULE_ARCHS=("b64")
+
+for ARCH in "${RULE_ARCHS[@]}"
+do
+	PATTERN="-a always,exit -F path=/usr/bin/chcon.*"
+	GROUP="privileged"
+	FULL_RULE="-a always,exit -F path=/usr/bin/chcon -F perm=x -F auid>=1000 -F auid!=4294967295 -F key=privileged"
+	fix_audit_syscall_rule "auditctl" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
+	fix_audit_syscall_rule "augenrules" "$PATTERN" "$GROUP" "$ARCH" "$FULL_RULE"
+done
diff --git a/linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/oval/wrlinux1019.xml b/linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/oval/wrlinux1019.xml
new file mode 100644
index 0000000..a70643a
--- /dev/null
+++ b/linux_os/guide/system/auditing/auditd_configure_rules/audit_execution_selinux_commands/audit_rules_execution_chcon/oval/wrlinux1019.xml
@@ -0,0 +1,46 @@
+<def-group>
+  <definition class="compliance" id="audit_rules_execution_chcon" version="1">
+    <metadata>
+      <title>Record Any Attempts to Run chcon</title>
+      <affected family="unix">
+        <platform>WRLinux</platform>
+	<platform>multi_platform_wrlinux</platform>
+      </affected>
+      <description>Audit rules about the information on the use of chcon is enabled.</description>
+    </metadata>
+
+    <criteria operator="OR">
+
+      <!-- Test the augenrules case -->
+      <criteria operator="AND">
+        <extend_definition comment="audit augenrules" definition_ref="audit_rules_augenrules" />
+        <criterion comment="audit augenrules chcon" test_ref="test_audit_rules_execution_chcon_augenrules" />
+      </criteria>
+
+      <!-- Test the auditctl case -->
+      <criteria operator="AND">
+        <extend_definition comment="audit auditctl" definition_ref="audit_rules_auditctl" />
+        <criterion comment="audit auditctl chcon" test_ref="test_audit_rules_execution_chcon_auditctl" />
+      </criteria>
+    </criteria>
+  </definition>
+
+  <ind:textfilecontent54_test check="all" check_existence="all_exist" comment="audit augenrules chcon" id="test_audit_rules_execution_chcon_augenrules" version="1">
+    <ind:object object_ref="object_audit_rules_execution_chcon_augenrules" />
+  </ind:textfilecontent54_test>
+  <ind:textfilecontent54_object id="object_audit_rules_execution_chcon_augenrules" version="1">
+    <ind:filepath operation="pattern match">/etc/audit/rules\.d/.*\.rules</ind:filepath>
+    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+-F[\s]+path=\/usr\/bin\/chcon[\s]+-F[\s]+perm=x[\s]+-F[\s]+auid>=1000[\s]+-F[\s]+auid!=4294967295[\s]+(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
+    <ind:instance datatype="int">1</ind:instance>
+  </ind:textfilecontent54_object>
+
+  <ind:textfilecontent54_test check="all" check_existence="all_exist" comment="audit auditctl chcon" id="test_audit_rules_execution_chcon_auditctl" version="1">
+    <ind:object object_ref="object_audit_rules_execution_chcon_auditctl" />
+  </ind:textfilecontent54_test>
+  <ind:textfilecontent54_object id="object_audit_rules_execution_chcon_auditctl" version="1">
+    <ind:filepath>/etc/audit/audit.rules</ind:filepath>
+    <ind:pattern operation="pattern match">^[\s]*-a[\s]+always,exit[\s]+-F[\s]+path=\/usr\/bin\/chcon[\s]+-F[\s]+perm=x[\s]+-F[\s]+auid>=1000[\s]+-F[\s]+auid!=4294967295[\s]+(-k[\s]+|-F[\s]+key=)[\S]+[\s]*$</ind:pattern>
+    <ind:instance datatype="int">1</ind:instance>
+  </ind:textfilecontent54_object>
+
+</def-group>
-- 
1.9.1

