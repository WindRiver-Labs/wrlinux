# Assumption is any changes to the below items should not require a rebuild
# of dependent items.  If it doesn't, this will have to be managed externally
# of this configuration.  Toolchain changes are most likely an issue.
SIGGEN_EXCLUDERECIPES_ABISAFE += " \
        binutils-cross-\${TARGET_ARCH} \
        gcc-cross-\${TARGET_ARCH} \
        gcc-runtime \
        glibc \
        libgcc \
        linux-libc-headers \
        rpm-native \
        coreutils \
        busybox \
        util-linux \
        e2fsprogs \
"

# Trust us, we don't want changes here to cause rebuilds!
# If we change any of these values we only want new builds to be
# affected anyway -- otherwise everything invalidates.
BB_HASHBASE_WHITELIST_append = " \
        FULL_OPTIMIZATION \
        DEBUG_OPTIMIZATION \
        DEBUG_BUILD \
        DEBUG_FLAGS \
"

# Force current and future toolchains to keep the same version
# Otherwise a toolchain upgrade will force all new packages,
# due to a change in dependency versions...
# we don't want that behavior
SDK_BINUTILS_PV_forcevariable  = "sdk"
SDK_GCC_PV_forcevariable       = "sdk"
SDK_GLIBC_PV_forcevariable     = "sdk"
SDK_LINUXLIBC_PV_forcevariable = "sdk"
SDK_GDB_PV_forcevariable       = "sdk"

# Enable the archiver
USER_CLASSES += "archiver"

ARCHIVER_MODE[src] = "original"
ARCHIVER_MODE[diff] = "1"
ARCHIVER_MODE[dumpdata] = "1"
ARCHIVER_MODE[recipe] = "1"

# Customize the name of the archiver output to match RPM formated names..
ARCHIVER_SRC_NAME = "${@''.join(d.getVar('PN', True).split(d.getVar('MLPREFIX', True) or 'NOPREFIX')) + '-' + d.getVar('PKGV', True).replace('-', '+') + '-' + d.getVar('PKGR', True)}"
ARCHIVER_OUTDIR_forcevariable = "${ARCHIVER_TOPDIR}/${@(d.getVar('MLPREFIX', True) or "").replace("-", "_")}${@(d.getVar('PACKAGE_ARCH', True) or "").replace("-", "_")}/${ARCHIVER_SRC_NAME}"

# Add RPM to all images..
IMAGE_FEATURES_append = " package-management"
