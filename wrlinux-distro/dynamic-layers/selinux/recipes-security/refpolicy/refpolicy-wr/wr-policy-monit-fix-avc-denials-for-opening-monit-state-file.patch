From 13b9300ab6e6ca9fd6042759f2da040b99c7511b Mon Sep 17 00:00:00 2001
From: Yi Zhao <yi.zhao@windriver.com>
Date: Fri, 1 Nov 2019 15:33:06 +0800
Subject: [PATCH] monit: fix avc denials for opening monit state file

Fix error:
monit: Cannot open the monit state file '/root/.monit.state' -- Permission denied

Upstream-Status: Pending

Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 policy/modules/services/monit.fc  |  3 ++
 policy/modules/services/monit.if  | 72 +++++++++++++++++++++++++++++++++++++++
 policy/modules/services/monit.te  | 11 ++++++
 policy/modules/system/init.if     |  4 +++
 policy/modules/system/modutils.te |  2 +-
 5 files changed, 91 insertions(+), 1 deletion(-)

diff --git a/policy/modules/services/monit.fc b/policy/modules/services/monit.fc
index 1cd0238..b451b12 100644
--- a/policy/modules/services/monit.fc
+++ b/policy/modules/services/monit.fc
@@ -12,3 +12,6 @@
 /var/lib/monit(/.*)?			gen_context(system_u:object_r:monit_var_lib_t,s0)
 
 /var/log/monit\.log.*		--	gen_context(system_u:object_r:monit_log_t,s0)
+
+HOME_DIR/\.monit\.state		--	gen_context(system_u:object_r:monit_home_t,s0)
+/root/\.monit\.state		--	gen_context(system_u:object_r:monit_home_t,s0)
diff --git a/policy/modules/services/monit.if b/policy/modules/services/monit.if
index 832cdca..e683e3f 100644
--- a/policy/modules/services/monit.if
+++ b/policy/modules/services/monit.if
@@ -104,6 +104,7 @@ interface(`monit_admin',`
 		type monit_t, monit_conf_t, monit_initrc_exec_t;
 		type monit_log_t, monit_runtime_t;
 		type monit_unit_t, monit_var_lib_t;
+		type monit_home_t;
 	')
 
 	admin_process_pattern($1, monit_t)
@@ -122,5 +123,76 @@ interface(`monit_admin',`
 	files_search_var_lib($1)
 	admin_pattern($1, monit_var_lib_t)
 
+	files_search_home($1)
+	admin_pattern($1, monit_home_t)
+
 	monit_run_cli($1, $2)
 ')
+
+########################################
+## <summary>
+##	Create, read, write, and delete
+##	monit home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`monit_manage_home_files',`
+	gen_require(`
+		type monit_home_t;
+	')
+
+	userdom_search_user_home_dirs($1)
+	allow $1 monit_home_t:file manage_file_perms;
+')
+
+########################################
+## <summary>
+##	Relabel monit home files.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+#
+interface(`monit_relabel_home_files',`
+	gen_require(`
+		type monit_home_t;
+	')
+
+	userdom_search_user_home_dirs($1)
+	allow $1 monit_home_t:file relabel_file_perms;
+')
+
+########################################
+## <summary>
+##	Create objects in user home
+##	directories with the monit home type.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed access.
+##	</summary>
+## </param>
+## <param name="object_class">
+##	<summary>
+##	Class of the object being created.
+##	</summary>
+## </param>
+## <param name="name" optional="true">
+##	<summary>
+##	The name of the object being created.
+##	</summary>
+## </param>
+#
+interface(`monit_home_filetrans_home',`
+	gen_require(`
+		type monit_home_t;
+	')
+
+	userdom_user_home_dir_filetrans($1, monit_home_t, $2, $3)
+')
diff --git a/policy/modules/services/monit.te b/policy/modules/services/monit.te
index 54e411b..bbfeed0 100644
--- a/policy/modules/services/monit.te
+++ b/policy/modules/services/monit.te
@@ -42,6 +42,9 @@ init_unit_file(monit_unit_t)
 type monit_var_lib_t;
 files_type(monit_var_lib_t)
 
+type monit_home_t;
+userdom_user_home_content(monit_home_t)
+
 ########################################
 #
 # Common monit domain policy
@@ -105,6 +108,10 @@ files_pid_filetrans(monit_t, monit_runtime_t, { file sock_file })
 allow monit_t monit_var_lib_t:dir manage_dir_perms;
 allow monit_t monit_var_lib_t:file manage_file_perms;
 
+monit_manage_home_files(monit_t)
+monit_relabel_home_files(monit_t)
+monit_home_filetrans_home(monit_t, file, ".monit.state")
+
 # entropy
 kernel_read_kernel_sysctls(monit_t)
 kernel_read_vm_overcommit_sysctl(monit_t)
@@ -124,9 +131,13 @@ domain_read_all_domains_state(monit_t)
 
 files_read_all_pids(monit_t)
 files_read_usr_files(monit_t)
+files_map_etc_files(monit_t)
 
 selinux_get_enforce_mode(monit_t)
 
+mls_file_read_all_levels(monit_t)
+mls_file_write_all_levels(monit_t)
+
 userdom_dontaudit_search_user_home_dirs(monit_t)
 
 ifdef(`init_systemd',`
diff --git a/policy/modules/system/init.if b/policy/modules/system/init.if
index a289fa3..d721055 100644
--- a/policy/modules/system/init.if
+++ b/policy/modules/system/init.if
@@ -101,6 +101,10 @@ interface(`init_script_domain',`
 	domtrans_pattern(init_run_all_scripts_domain, $2, $1)
 
 	ifdef(`init_systemd',`
+		gen_require(`
+			type init_t;
+		')
+
 		allow $1 init_t:unix_stream_socket { getattr read write ioctl };
 		allow init_t $1:process2 { nnp_transition nosuid_transition };
 	')
diff --git a/policy/modules/system/modutils.te b/policy/modules/system/modutils.te
index 9aa734c..db508d6 100644
--- a/policy/modules/system/modutils.te
+++ b/policy/modules/system/modutils.te
@@ -36,7 +36,7 @@ ifdef(`init_systemd',`
 # insmod local policy
 #
 
-allow kmod_t self:capability { dac_override net_raw sys_nice sys_tty_config };
+allow kmod_t self:capability { dac_override net_raw sys_nice sys_tty_config dac_read_search };
 allow kmod_t self:process { execmem sigchld sigkill sigstop signull signal };
 # for the radeon/amdgpu modules
 dontaudit kmod_t self:capability sys_admin;
-- 
2.7.4

