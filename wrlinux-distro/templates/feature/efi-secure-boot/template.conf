#
# Copyright (C) 2016-2018 Wind River Systems, Inc.
#

BANNER_FEATURE_EFI_SECURE_BOOT = "\
The feature/efi-secure-boot requires the meta-efi-secure-boot layer to be \
enabled.  However, this layer has not been included in your project.  You \
may get warnings or errors due to this."

CONFIG_BANNER[feature_efi-secure-boot] = "${@bb.utils.contains('BBFILE_COLLECTIONS', 'efi-secure-boot', '', '${BANNER_FEATURE_EFI_SECURE_BOOT}', d)}"

BANNER[feature_efi-secure-boot_key] = "${@'You are using the default Wind River Secure Boot keys.This keys are provided as samples, and are unsafe to use in production. Use "meta-secure-core/meta-signing-key/scripts/create-user-key-store.sh" to generate yours, and set WR_KEYS_DIR = /path/to/new/keys.' if d.getVar('WR_KEYS_DIR') == d.getVar('WR_SAMPLE_KEYS_DIR') else ''}"

FATAL_EFI_SECURE_BOOT_MSG = "The efi-secure-boot template can only be used with x86 or x86-64 machines."
FATAL_EFI_SECURE_BOOT_MSG_x86 = ""
FATAL_EFI_SECURE_BOOT_MSG_x86-64 = ""
FATAL_CONFIG_BANNER[feature_efi-secure-boot] = "${FATAL_EFI_SECURE_BOOT_MSG}"

PNWHITELIST_efi-secure-boot += '\
    efitools \
    efitools-native \
    mokutil \
    packagegroup-efi-secure-boot \
    seloader \
    shim \
'

PNWHITELIST_secure-core += '\
    kernel-initramfs \
    secure-core-image-initramfs \
    initrdscripts-secure-core \
'

PNWHITELIST_perl-layer += 'libfile-slurp-perl'

PNWHITELIST_signing-key += '\
    sbsigntool-native \
    libsign-native \
'

DISTRO_FEATURES_append = " efi-secure-boot"
MACHINE_FEATURES_append = " efi"

# For EFI stub loader support
KERNEL_FEATURES_append_x86 = " cfg/efi.scc"
KERNEL_FEATURES_append_x86-64 = " cfg/efi.scc"

# Setup GRUB_IMAGE for UEFI secure boot
GRUB_IMAGE = '${@bb.utils.contains("TARGET_ARCH", "x86_64", "grubx64.efi", "grubia32.efi", d)}'

INITRAMFS_IMAGE = "secure-core-image-initramfs"

WKS_FILE = "scp-efi-bootdisk.wks.in"

# Define WindRiver identification for UEFI secure boot keys
# # echo "WindRiverLinux" | xxd -p
WR_SECURE_VENDOR_UUID ?= "57696e64-5269-7665-724c-696e75780a"
# # User configurable identification of signature owner
UEFI_SIG_OWNER_GUID ?= "${WR_SECURE_VENDOR_UUID}"

# Following will be passed to meta-secure-core
MOK_SB_KEYS_DIR ?= "${WR_KEYS_DIR}/mok_sb_keys"
UEFI_SB_KEYS_DIR ?= "${WR_KEYS_DIR}/uefi_sb_keys"
