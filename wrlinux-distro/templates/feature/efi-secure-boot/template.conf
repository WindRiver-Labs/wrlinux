#
# Copyright (C) 2016-2017 Wind River Systems, Inc.
#

BANNER_FEATURE_EFI_SECURE_BOOT = "\
The feature/efi-secure-boot requires the meta-efi-secure-boot layer to be \
enabled.  However, this layer has not been included in your project.  You \
may get warnings or errors due to this."

CONFIG_BANNER[feature_efi-secure-boot] = "${@bb.utils.contains('BBFILE_COLLECTIONS', 'efi-secure-boot', '', '${BANNER_FEATURE_EFI_SECURE_BOOT}', d)}"

PNWHITELIST_efi-secure-boot += '\
	efitools \
	efitools-native \
	mokutil \
	packagegroup-efi-secure-boot \
	seloader \
	shim \
	'

PNWHITELIST_openembedded-layer += '\
	efibootmgr \
	efivar \
	'

PNWHITELIST_secure-core += '\
	kernel-initramfs \
	'

PNWHITELIST_perl-layer += 'libfile-slurp-perl'

PNWHITELIST_signing-key += '\
	sbsigntool-native \
	libsign-native \
	'

DISTRO_FEATURES_append = " efi-secure-boot"
MACHINE_FEATURES_append = " efi"

# For EFI stub loader support
KERNEL_FEATURES_append_x86 = " cfg/efi.scc"
KERNEL_FEATURES_append_x86-64 = " cfg/efi.scc"

# Setup GRUB_IMAGE for UEFI secure boot
GRUB_IMAGE = '${@bb.utils.contains("TARGET_ARCH", "x86_64", "grubx64.efi", "grubia32.efi", d)}'

WRTEMPLATE_CLASSES += "extra_hddimg_populate"
