BCC is a toolkit for creating efficient kernel tracing and manipulation
programs, and includes several useful tools and examples. It makes use of
extended BPF (Berkeley Packet Filters), formally known as eBPF, a new feature
that was first added to Linux 3.15. Much of what BCC uses requires Linux 4.1
and above.

With Yocto's current configuration, bcc is compatible with x86_64 and aarch64
BSPs.

Here is an example tracing a disk I/O kernel function, and populates an
in-kernel power-of-2 histogram of the I/O size. For efficiency, only the
histogram summary is returned to user-level.

# ./bitehist.py
Tracing... Hit Ctrl-C to end.
^C
     kbytes          : count     distribution
       0 -> 1        : 3        |                                      |
       2 -> 3        : 0        |                                      |
       4 -> 7        : 211      |**********                            |
       8 -> 15       : 0        |                                      |
      16 -> 31       : 0        |                                      |
      32 -> 63       : 0        |                                      |
      64 -> 127      : 1        |                                      |
     128 -> 255      : 800      |**************************************|
The above output shows a bimodal distribution, where the largest mode of 800 I/O
was between 128 and 255 Kbytes in size.

FAQ, reference guide, contents, tools, tutorials, examples and how to develop
new tools have been elaborated in https://github.com/iovisor/bcc

#@TYPE: Wrtemplate
#@NAME: bcc
#@DESCRIPTION: Enable bcc and related kernel options
