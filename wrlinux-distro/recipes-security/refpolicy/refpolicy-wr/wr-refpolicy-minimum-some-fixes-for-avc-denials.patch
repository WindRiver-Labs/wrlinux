From 001ab2609c94f6227a9954f75fd929dbcb1d0580 Mon Sep 17 00:00:00 2001
From: Wenzong Fan <wenzong.fan@windriver.com>
Date: Mon, 20 Feb 2017 13:42:34 +0000
Subject: [PATCH] refpolicy: some fixes for avc denials

Reference sources: selinux-policy-3.13.1-225.6.fc25.src.rpm
Changes come from: policy-f25-base.patch
                   policy-f25-contrib.patch

* allow radiusd search tmpfs dirs
* allow NetworkManager (gmain) search NetworkManager_initrc_exec dirs
* allow NetworkManager create rawip_socket with type NetworkManager_t
* allow login search tmpfs dirs
* allow ipsec_supervisor (starter) search /run/systemd/journal dir

WRL Fixes:
* allow watchdog search tmpfs dirs
* allow systemd-udevd has capability wake_alarm to itself
* allow systemd-cgroups send messages to unix_dgram_socket
* allow irqbalance has capability dac_override to itself

Fix avc denials:

  avc: denied { search } for pid=334 comm="watchdog" \
  name="/" dev="tmpfs" ino=9358 \
  scontext=system_u:system_r:watchdog_t:s0-s15:c0.c1023 \
  tcontext=system_u:object_r:tmpfs_t:s0 tclass=dir

  avc: denied { search } for pid=494 comm="radiusd" \
  name="/" dev="tmpfs" ino=9260 \
  scontext=system_u:system_r:radiusd_t:s0-s15:c0.c1023 \
  tcontext=system_u:object_r:tmpfs_t:s0 tclass=dir

  avc: denied { wake_alarm } for pid=219 \
  comm="systemd-udevd" capability=35 \
  scontext=system_u:system_r:udev_t:s0-s15:c0.c1023 \
  tcontext=system_u:system_r:udev_t:s0-s15:c0.c1023 \
  tclass=capability2

  avc: denied { search } for pid=484 comm="gmain" \
  name="dispatcher.d" dev="sda1" ino=1089942 \
  scontext=system_u:system_r:NetworkManager_t:s0-s15:c0.c1023 \
  tcontext=system_u:object_r:NetworkManager_initrc_exec_t:s0 tclass=dir

  avc: denied { create } for pid=472 comm="NetworkManager" \
  scontext=system_u:system_r:NetworkManager_t:s0-s15:c0.c1023 \
  tcontext=system_u:system_r:NetworkManager_t:s0-s15:c0.c1023 \
  tclass=rawip_socket

  avc: denied { search } for pid=832 comm="login" \
  name="/" dev="tmpfs" ino=555 \
  scontext=system_u:system_r:local_login_t:s0-s15:c0.c1023 \
  tcontext=system_u:object_r:tmpfs_t:s0 tclass=dir

  avc: denied { sendto } for pid=1073 comm="systemd-cgroups" \
  path="/run/systemd/cgroups-agent" \
  scontext=system_u:system_r:systemd_cgroups_t:s15:c0.c1023 \
  tcontext=system_u:system_r:init_t:s0-s15:c0.c1023 \
  tclass=unix_dgram_socket

  avc: denied { search } for pid=601 comm="starter" \
  name="journal" dev="tmpfs" ino=12298 \
  scontext=system_u:system_r:ipsec_supervisor_t:s0-s15:c0.c1023 \
  tcontext=system_u:object_r:syslogd_var_run_t:s15:c0.c1023 tclass=dir

  avc: denied { dac_override } for pid=419 comm="irqbalance" \
  scontext=system_u:system_r:irqbalance_t:s0-s15:c0.c1023 \
  tcontext=system_u:system_r:irqbalance_t:s0-s15:c0.c1023 \
  tclass=capability

Upstream-Status: Pending

Signed-off-by: Wenzong Fan <wenzong.fan@windriver.com>
Signed-off-by: Yi Zhao <yi.zhao@windriver.com>
---
 policy/modules/contrib/irqbalance.te     |  2 +-
 policy/modules/contrib/networkmanager.te |  5 +++++
 policy/modules/contrib/radius.te         |  1 +
 policy/modules/contrib/watchdog.te       |  1 +
 policy/modules/kernel/files.if           | 18 ++++++++++++++++++
 policy/modules/system/ipsec.te           |  2 ++
 policy/modules/system/locallogin.te      |  1 +
 policy/modules/system/systemd.te         |  2 ++
 policy/modules/system/udev.te            |  2 +-
 9 files changed, 32 insertions(+), 2 deletions(-)

diff --git a/policy/modules/contrib/irqbalance.te b/policy/modules/contrib/irqbalance.te
index b8cea5e..e955650 100644
--- a/policy/modules/contrib/irqbalance.te
+++ b/policy/modules/contrib/irqbalance.te
@@ -24,7 +24,7 @@ init_unit_file(irqbalance_unit_t)
 # Local policy
 #
 
-allow irqbalance_t self:capability { setpcap };
+allow irqbalance_t self:capability { setpcap dac_override };
 dontaudit irqbalance_t self:capability sys_tty_config;
 allow irqbalance_t self:process { getcap getsched setcap signal_perms };
 allow irqbalance_t self:udp_socket create_socket_perms;
diff --git a/policy/modules/contrib/networkmanager.te b/policy/modules/contrib/networkmanager.te
index 9580c7a..c30bb09 100644
--- a/policy/modules/contrib/networkmanager.te
+++ b/policy/modules/contrib/networkmanager.te
@@ -56,6 +56,7 @@ allow NetworkManager_t self:netlink_kobject_uevent_socket create_socket_perms;
 allow NetworkManager_t self:tcp_socket { accept listen };
 allow NetworkManager_t self:tun_socket { create_socket_perms relabelfrom relabelto };
 allow NetworkManager_t self:packet_socket create_socket_perms;
+allow NetworkManager_t self:rawip_socket create_socket_perms;
 allow NetworkManager_t self:socket create_socket_perms;
 
 allow NetworkManager_t wpa_cli_t:unix_dgram_socket sendto;
@@ -64,6 +65,10 @@ allow NetworkManager_t NetworkManager_etc_t:dir list_dir_perms;
 allow NetworkManager_t NetworkManager_etc_t:file read_file_perms;
 allow NetworkManager_t NetworkManager_etc_t:lnk_file read_lnk_file_perms;
 
+list_dirs_pattern(NetworkManager_t, NetworkManager_initrc_exec_t, NetworkManager_initrc_exec_t)
+read_files_pattern(NetworkManager_t, NetworkManager_initrc_exec_t, NetworkManager_initrc_exec_t)
+read_lnk_files_pattern(NetworkManager_t, NetworkManager_initrc_exec_t, NetworkManager_initrc_exec_t)
+
 manage_dirs_pattern(NetworkManager_t, NetworkManager_etc_rw_t, NetworkManager_etc_rw_t)
 manage_files_pattern(NetworkManager_t, NetworkManager_etc_rw_t, NetworkManager_etc_rw_t)
 filetrans_pattern(NetworkManager_t, NetworkManager_etc_t, NetworkManager_etc_rw_t, { dir file })
diff --git a/policy/modules/contrib/radius.te b/policy/modules/contrib/radius.te
index fa7698f..501562f 100644
--- a/policy/modules/contrib/radius.te
+++ b/policy/modules/contrib/radius.te
@@ -96,6 +96,7 @@ domain_use_interactive_fds(radiusd_t)
 
 fs_getattr_all_fs(radiusd_t)
 fs_search_auto_mountpoints(radiusd_t)
+fs_search_tmpfs(radiusd_t)
 
 files_read_usr_files(radiusd_t)
 files_read_etc_runtime_files(radiusd_t)
diff --git a/policy/modules/contrib/watchdog.te b/policy/modules/contrib/watchdog.te
index 431aab3..0a68d76 100644
--- a/policy/modules/contrib/watchdog.te
+++ b/policy/modules/contrib/watchdog.te
@@ -74,6 +74,7 @@ files_read_all_pids(watchdog_t)
 fs_unmount_xattr_fs(watchdog_t)
 fs_getattr_all_fs(watchdog_t)
 fs_search_auto_mountpoints(watchdog_t)
+fs_search_tmpfs(watchdog_t)
 
 auth_append_login_records(watchdog_t)
 
diff --git a/policy/modules/kernel/files.if b/policy/modules/kernel/files.if
index 85de77d..b017377 100644
--- a/policy/modules/kernel/files.if
+++ b/policy/modules/kernel/files.if
@@ -6928,6 +6928,24 @@ interface(`files_dontaudit_search_non_security_dirs',`
 
 ########################################
 ## <summary>
+##      Allow search the all /var/run directory.
+## </summary>
+## <param name="domain">
+##      <summary>
+##      Domain to not audit.
+##      </summary>
+## </param>
+#
+interface(`files_search_all_pids',`
+	gen_require(`
+		attribute pidfile;
+	')
+
+	allow $1 pidfile:dir search_dir_perms;
+')
+
+########################################
+## <summary>
 ##	systemd tmp files access to kernel tmp files domain
 ## </summary>
 ## <param name="domain">
diff --git a/policy/modules/system/ipsec.te b/policy/modules/system/ipsec.te
index ec730fa..c36d8ef 100644
--- a/policy/modules/system/ipsec.te
+++ b/policy/modules/system/ipsec.te
@@ -491,6 +491,8 @@ allow ipsec_supervisor_t ipsec_var_run_t:sock_file { rw_sock_file_perms unlink }
 manage_dirs_pattern(ipsec_supervisor_t, ipsec_var_run_t, ipsec_var_run_t)
 manage_files_pattern(ipsec_supervisor_t, ipsec_var_run_t, ipsec_var_run_t)
 files_pid_filetrans(ipsec_supervisor_t, ipsec_var_run_t, { dir file sock_file })
+files_search_all_pids(ipsec_supervisor_t)
+mls_file_read_all_levels(ipsec_supervisor_t)
 
 domtrans_pattern(ipsec_supervisor_t, ipsec_exec_t, ipsec_t);
 
diff --git a/policy/modules/system/locallogin.te b/policy/modules/system/locallogin.te
index 2dfac99..fb843c7 100644
--- a/policy/modules/system/locallogin.te
+++ b/policy/modules/system/locallogin.te
@@ -105,6 +105,7 @@ files_read_world_readable_sockets(local_login_t)
 files_read_var_symlinks(local_login_t)
 
 fs_search_auto_mountpoints(local_login_t)
+fs_search_tmpfs(local_login_t)
 
 storage_dontaudit_getattr_fixed_disk_dev(local_login_t)
 storage_dontaudit_setattr_fixed_disk_dev(local_login_t)
diff --git a/policy/modules/system/systemd.te b/policy/modules/system/systemd.te
index bbfe81f..9a86f7b 100644
--- a/policy/modules/system/systemd.te
+++ b/policy/modules/system/systemd.te
@@ -172,6 +172,8 @@ udev_read_pid_files(systemd_backlight_t)
 allow systemd_cgroups_t self:capability net_admin;
 # read the process state (/proc/pid) of init
 init_read_state(systemd_cgroups_t)
+# send messages to init unix datagram sockets
+init_dgram_send(systemd_cgroups_t)
 # MLS trusted for writing to sockets at any level
 mls_socket_write_all_levels(systemd_cgroups_t)
 # write to init sock file
diff --git a/policy/modules/system/udev.te b/policy/modules/system/udev.te
index 7f14835..ad4ce32 100644
--- a/policy/modules/system/udev.te
+++ b/policy/modules/system/udev.te
@@ -40,7 +40,7 @@ ifdef(`enable_mcs',`
 
 allow udev_t self:capability { chown dac_override dac_read_search fowner fsetid sys_admin mknod net_raw net_admin sys_nice sys_rawio sys_resource setuid setgid sys_nice sys_ptrace };
 dontaudit udev_t self:capability sys_tty_config;
-allow udev_t self:capability2 block_suspend;
+allow udev_t self:capability2 { block_suspend wake_alarm };
 allow udev_t self:process ~{ setcurrent setexec setfscreate setrlimit execmem execstack execheap };
 allow udev_t self:process { execmem setfscreate };
 allow udev_t self:fd use;
-- 
2.7.4

