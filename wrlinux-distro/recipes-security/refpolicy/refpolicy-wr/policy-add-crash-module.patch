Subject: [PATCH] refpolicy: add crash policy module

Crash module rules:
- execute domain trans: crash_exec_t(run in sysadm_t) -> crash_t
- execute modprobe(insmod_t) with domain trans.
- execute bin, shell commands without domain trans.
- files created by crash_t will be labelled to crash_tmp_t in tmp_t dir.
- allow: load kernel image, core files...
- allow: read/write /dev/mem, /proc/kcore, to clearance if MLS.
- allow: Read locale files, /etc files

Upstream-Status: pending

Signed-off-by: Xin Ouyang <Xin.Ouyang@windriver.com>
---
 policy/modules/contrib/crash.fc |  1 +
 policy/modules/contrib/crash.if | 46 ++++++++++++++++++++++++++++++++
 policy/modules/contrib/crash.te | 58 +++++++++++++++++++++++++++++++++++++++++
 policy/modules/roles/sysadm.te  |  4 +++
 4 files changed, 109 insertions(+)
 create mode 100644 policy/modules/contrib/crash.fc
 create mode 100644 policy/modules/contrib/crash.if
 create mode 100644 policy/modules/contrib/crash.te

diff --git a/policy/modules/contrib/crash.fc b/policy/modules/contrib/crash.fc
new file mode 100644
index 0000000..55c6632
--- /dev/null
+++ b/policy/modules/contrib/crash.fc
@@ -0,0 +1 @@
+/usr/bin/crash.*	--	gen_context(system_u:object_r:crash_exec_t,s0)
diff --git a/policy/modules/contrib/crash.if b/policy/modules/contrib/crash.if
new file mode 100644
index 0000000..36e73a4
--- /dev/null
+++ b/policy/modules/contrib/crash.if
@@ -0,0 +1,46 @@
+## <summary>Kernel crash dumping mechanism</summary>
+
+######################################
+## <summary>
+##	Execute crash in the crash domain.
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+#
+interface(`crash_domtrans',`
+	gen_require(`
+		type crash_t, crash_exec_t;
+	')
+
+	corecmd_search_bin($1)
+	domtrans_pattern($1, crash_exec_t, crash_t)
+')
+
+########################################
+## <summary>
+##	Execute crash in the crash domain, and allow the role
+## </summary>
+## <param name="domain">
+##	<summary>
+##	Domain allowed to transition.
+##	</summary>
+## </param>
+## <param name="role">
+##	<summary>
+##	Role allowed access.
+##	</summary>
+## </param>
+## <rolecap/>
+#
+interface(`crash_run',`
+	gen_require(`
+		type crash_t;
+	')
+
+	role $2 types crash_t;
+
+	crash_domtrans($1)
+')
diff --git a/policy/modules/contrib/crash.te b/policy/modules/contrib/crash.te
new file mode 100644
index 0000000..9e1db72
--- /dev/null
+++ b/policy/modules/contrib/crash.te
@@ -0,0 +1,58 @@
+policy_module(crash, 1.0.0)
+
+#######################################
+#
+# Declarations
+#
+
+type crash_t;
+type crash_exec_t;
+domain_type(crash_t)
+domain_entry_file(crash_t, crash_exec_t)
+
+type crash_tmp_t;
+files_tmp_file(crash_tmp_t)
+
+#####################################
+#
+# crash local policy
+#
+
+allow crash_t self:capability dac_override;
+
+files_read_kernel_img(crash_t)
+
+kernel_read_system_state(crash_t)
+kernel_read_debugfs(crash_t)
+# crash will try rw /proc/kcore, but only to read it
+kernel_read_core_if(crash_t)
+dontaudit crash_t proc_kcore_t:file write;
+
+modutils_domtrans_insmod(crash_t)
+
+corecmd_exec_bin(crash_t)
+corecmd_exec_shell(crash_t)
+allow crash_t self:fifo_file rw_fifo_file_perms;
+
+manage_dirs_pattern(crash_t, crash_tmp_t, crash_tmp_t)
+manage_files_pattern(crash_t, crash_tmp_t, crash_tmp_t)
+files_tmp_filetrans(crash_t, crash_tmp_t, { file dir })
+
+# Read locale files
+miscfiles_read_localization(crash_t)
+# Read /etc/terminfo/...
+files_read_etc_files(crash_t)
+
+userdom_read_user_home_content_files(crash_t)
+userdom_list_user_home_dirs(crash_t)
+userdom_use_user_terminals(crash_t)
+domain_use_interactive_fds(crash_t)
+domain_signull_all_domains(crash_t)
+
+# crash will try to read&write /dev/mem, /proc/kcore, 
+# which are labeled in high level
+dev_write_raw_memory(crash_t)
+dev_read_raw_memory(crash_t)
+
+mls_file_read_to_clearance(crash_t)
+mls_file_write_to_clearance(crash_t)
diff --git a/policy/modules/roles/sysadm.te b/policy/modules/roles/sysadm.te
index 342ce5b..cee455d 100644
--- a/policy/modules/roles/sysadm.te
+++ b/policy/modules/roles/sysadm.te
@@ -122,6 +122,10 @@ optional_policy(`
 ')
 
 optional_policy(`
+	crash_run(sysadm_t, sysadm_r)
+')
+
+optional_policy(`
 	clockspeed_run_cli(sysadm_t, sysadm_r)
 ')
 
-- 
1.7.11.7

