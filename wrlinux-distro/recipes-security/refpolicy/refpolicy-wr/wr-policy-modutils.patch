refpolicy: insmod_t

modprobe might try to read /dev/null, and that will fail
in mls systems because insmod_t is s0-s15 while /dev/null
is s0.  So, we defeat that constraint for insmod_t.

Upstream-Status: Pending

Signed-off-by: Joe Slater <jslater@windriver.com>
Signed-off-by: Wenzong Fan <wenzong.fan@windriver.com>
---
 policy/modules/system/modutils.te | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/policy/modules/system/modutils.te b/policy/modules/system/modutils.te
index a1398b5..34b133a 100644
--- a/policy/modules/system/modutils.te
+++ b/policy/modules/system/modutils.te
@@ -9,6 +9,7 @@ type kmod_t alias { insmod_t depmod_t update_modules_t };
 type kmod_exec_t alias { insmod_exec_t depmod_exec_t update_modules_exec_t };
 application_domain(kmod_t, kmod_exec_t)
 kernel_domtrans_to(kmod_t, kmod_exec_t)
+mls_file_read_all_levels(insmod_t)
 mls_file_write_all_levels(kmod_t)
 role system_r types kmod_t;
 
@@ -111,6 +112,9 @@ userdom_use_user_terminals(kmod_t)
 
 userdom_dontaudit_search_user_home_dirs(kmod_t)
 
+# read /dev/null !
+allow insmod_t device_t:chr_file read;
+
 ifdef(`init_systemd',`
 	init_rw_stream_sockets(kmod_t)
 
-- 
2.13.3

