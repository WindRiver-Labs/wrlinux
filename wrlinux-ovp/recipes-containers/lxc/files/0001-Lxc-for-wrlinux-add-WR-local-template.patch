From ffde1ba8d2677d726e2df6ce4a703b9e2c01f6f4 Mon Sep 17 00:00:00 2001
From: "Hongzhi.Song" <hongzhi.song@windriver.com>
Date: Wed, 22 Aug 2018 01:54:29 -0400
Subject: [PATCH] Lxc for wrlinux: add WR local template

Upstream-Status: Inappropriate [These patches are just for generating
WRLinux container for LXC. Some configuration is not suitable for upstream.]

Signed-off-by: Hongzhi.Song <hongzhi.song@windriver.com>

Rebase to 3.1.0, remove useless configure and template/Makefile.in
Signed-off-by: Hongxu Jia <hongxu.jia@windriver.com>
---
 configure.ac             |   7 +-
 templates/Makefile.am    |   3 +-
 templates/lxc-wrlinux.in | 207 +++++++++++++++++++++++++++++++++++++++++++++++
 3 files changed, 213 insertions(+), 4 deletions(-)
 create mode 100644 templates/lxc-wrlinux.in

diff --git a/configure.ac b/configure.ac
index 2f6b298..a664e66 100644
--- a/configure.ac
+++ b/configure.ac
@@ -68,7 +68,7 @@ AC_SUBST([LIBTOOL_DEPS])
 # Detect the distribution. This is used for the default configuration and
 # for some distro-specific build options.
 AC_MSG_CHECKING([host distribution])
-AC_ARG_WITH(distro, AS_HELP_STRING([--with-distro=DISTRO], [Specify the Linux distribution to target: One of redhat, redhatenterpriseserver, oracle, centos, fedora, suse, gentoo, debian, arch, slackware, plamo, paldo, openmandriva, pardus, sparclinux, altlinux.]))
+AC_ARG_WITH(distro, AS_HELP_STRING([--with-distro=DISTRO], [Specify the Linux distribution to target: One of redhat, redhatenterpriseserver, oracle, centos, fedora, suse, gentoo, debian, arch, slackware, plamo, paldo, openmandriva, pardus, sparclinux, altlinux and wrlinux.]))
 if type lsb_release >/dev/null 2>&1 && test "z$with_distro" = "z"; then
 	with_distro=`lsb_release -is`
 fi
@@ -105,7 +105,7 @@ case $with_distro in
 		distroconf=default.conf.lxcbr
 		distrosysconf="$sysconfdir/default"
 		;;
-	redhat|redhatenterpriseserver|centos|fedora|oracle|oracleserver|sparclinux|altlinux|suse|opensuse*|plamo|pld)
+	redhat|redhatenterpriseserver|centos|fedora|oracle|oracleserver|sparclinux|altlinux|suse|opensuse*|plamo|pld|wrlinux)
 		distroconf=default.conf.lxcbr
 		distrosysconf="$sysconfdir/sysconfig"
 		;;
@@ -132,7 +132,7 @@ case "$with_init_script" in
 			fedora|altlinux|opensuse*)
 				init_script=systemd
 				;;
-			redhat|redhatenterpriseserver|oracle|oracleserver|sparclinux|plamo)
+			redhat|redhatenterpriseserver|oracle|oracleserver|sparclinux|plamo|wrlinux)
 				init_script=sysvinit
 				;;
 			centos)
@@ -900,6 +900,7 @@ AC_CONFIG_FILES([
 	templates/lxc-download
 	templates/lxc-local
 	templates/lxc-oci
+    templates/lxc-wrlinux
 
 	src/Makefile
 	src/lxc/Makefile
diff --git a/templates/Makefile.am b/templates/Makefile.am
index 15df51d..b6f3746 100644
--- a/templates/Makefile.am
+++ b/templates/Makefile.am
@@ -3,4 +3,5 @@ templatesdir=@LXCTEMPLATEDIR@
 templates_SCRIPTS = lxc-busybox \
 		    lxc-download \
 		    lxc-local \
-		    lxc-oci
+		    lxc-oci \
+			lxc-wrlinux
diff --git a/templates/lxc-wrlinux.in b/templates/lxc-wrlinux.in
new file mode 100644
index 0000000..d1daa02
--- /dev/null
+++ b/templates/lxc-wrlinux.in
@@ -0,0 +1,207 @@
+#!/bin/bash
+
+#
+# template script for generating WRLinux container for LXC
+#
+
+#
+# lxc: linux Container library
+
+# Authors:
+# Yang Shi <yang.shi@windriver.com>
+
+# This library is free software; you can redistribute it and/or
+# modify it under the terms of the GNU Lesser General Public
+# License as published by the Free Software Foundation; either
+# version 2.1 of the License, or (at your option) any later version.
+
+# This library is distributed in the hope that it will be useful,
+# but WITHOUT ANY WARRANTY; without even the implied warranty of
+# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+# Lesser General Public License for more details.
+
+# You should have received a copy of the GNU Lesser General Public
+# License along with this library; if not, write to the Free Software
+# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
+
+#Configurations
+default_path=@LXCPATH@
+default_profile=default
+
+configure_wrlinux()
+{
+    if [ "${init_method}" == "sysvinit" ]; then
+        # Tweak initscripts
+        sed -i 's/^\(si::sysinit:\/etc\/init.d\/rcS\)/# \1/' ${rootfs_path}/etc/inittab
+    fi
+
+    # Touch file for fastboot
+    dev_path="${rootfs_path}/dev"
+    rm -rf ${dev_path}
+    mkdir -p ${dev_path}
+    mknod -m 666 ${dev_path}/null c 1 3
+    mknod -m 666 ${dev_path}/zero c 1 5
+    mknod -m 644 ${dev_path}/random c 1 8
+    mknod -m 644 ${dev_path}/urandom c 1 9
+    mkdir -m 755 ${dev_path}/pts
+    mkdir -m 1777 ${dev_path}/shm
+    mknod -m 666 ${dev_path}/tty c 5 0
+    mknod -m 600 ${dev_path}/tty0 c 4 0
+    mknod -m 600 ${dev_path}/console c 5 1
+    mknod -m 666 ${dev_path}/full c 1 7
+    mknod -m 600 ${dev_path}/initctl p
+    mknod -m 666 ${dev_path}/ptmx c 5 2
+
+    return 0
+}
+
+download_wrlinux()
+{
+    return 0
+}
+
+copy_wrlinux()
+{
+    return 0
+}
+
+update_wrlinux()
+{
+    return 0
+}
+
+install_wrlinux()
+{
+    return 0
+}
+
+copy_configuration()
+{
+
+    mkdir -p $config_path
+    grep -q "^lxc.rootfs.path" $config_path/config 2>/dev/null || echo "lxc.rootfs.path = $rootfs_path" >> $config_path/config
+
+    if [ "${init_method}" == "sysvinit" ]; then
+    cat <<EOF >> $config_path/config
+lxc.uts.name = $name
+lxc.tty.max = 6
+lxc.pty.max = 1024
+lxc.mount.fstab = $config_path/fstab
+EOF
+    # systemd
+    else
+    cat <<EOF >> $config_path/config
+lxc.uts.name = $name
+lxc.autodev=1
+lxc.tty.max = 6
+lxc.pty.max = 1024
+lxc.mount.fstab = $config_path/fstab
+EOF
+
+    cat <<EOF > $config_path/fstab
+none            $rootfs_path/sys          sysfs   defaults  0 0
+EOF
+    fi
+
+    cat <<EOF > $config_path/fstab
+none            $rootfs_path/proc         proc    defaults  0 0
+none            $rootfs_path/sys          sysfs   defaults  0 0
+none            $rootfs_path/dev/pts      devpts  defaults  0 0
+none            $rootfs_path/dev/shm      tmpfs   rw,suid,dev,exec,create=dir  0 0
+EOF
+
+    if [ $? -ne 0 ]; then
+        echo "Failed to add configuration"
+        return 1
+    fi
+
+    return 0
+}
+
+clean()
+{
+    return 0
+}
+
+usage()
+{
+    cat <<EOF
+usage:
+    $1 -n|--name=<container_name>
+        [-p|--path=<path>] [-r|--rootfs=<path>] [-i|--init=<init_method>] [-h|--help]
+Mandatory args:
+  -n,--name         container name, used to as an identifier for that container from now on
+Optional args:
+  -p,--path         path to where the container will be created, defaults to @LXCPATH@. The container config will go under @LXCPATH@ in that case
+  -r,--rootfs       path for actual container rootfs, (${default_path}/rootfs)
+  -i,--init         init method used by system, systemd or sysvinit
+  -h,--help         print this help
+EOF
+    return 0
+}
+
+options=$(getopt -o hp:n:r:i: -l help,path:,name:,rootfs:,init: -- "$@")
+if [ $? -ne 0 ]; then
+    usage $(basename $0)
+    exit 1
+fi
+eval set -- "$options"
+
+while true
+do
+    case "$1" in
+        -h|--help)      usage $0 && exit 0;;
+        -p|--path)      path=$2; shift 2;;
+        -r|--rootfs)    rootfs=$2; shift 2;;
+        -n|--name)      name=$2; shift 2;;
+        -i|--init)      init_method=$2; shift 2;;
+        --)             shift 1; break ;;
+        *)              break ;;
+    esac
+done
+
+if [ -z "$name" ]; then
+    echo "The container name is null, please rerun the script with a valid container name"
+    exit 1
+fi
+
+if [ -z "$path" ]; then
+    path=$default_path/$name
+fi
+
+if [ "$(id -u)" != "0" ]; then
+    echo "This script should be run as 'root'"
+    exit 1
+fi
+
+if [ -z "$rootfs" ]; then
+    rootfs_path=$path/rootfs
+    # check for 'lxc.rootfs.path' passed in through default config by lxc-create
+    if grep -q '^lxc.rootfs.path' $path/config 2>/dev/null ; then
+       rootfs_path=$(awk -F= '/^lxc.rootfs.path =/{ print $2 }' $path/config)
+    fi
+else
+    rootfs_path=$rootfs
+fi
+
+config_path=$default_path/$name
+
+install_wrlinux
+if [ $? -ne 0 ]; then
+    echo "failed to install WRLinux"
+    exit 1
+fi
+
+configure_wrlinux
+if [ $? -ne 0 ]; then
+    echo "failed to configure WRLinux for a container"
+    exit 1
+fi
+
+copy_configuration
+if [ $? -ne 0 ]; then
+    echo "failed write configuration file"
+    exit 1
+fi
+
+echo "container rootfs and config created"
-- 
2.7.4

