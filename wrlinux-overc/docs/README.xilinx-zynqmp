                           OverC on the xilinx-zynqmp BSP
			   ------------------------------

Introduction
---

The following provides information for building and running OverC on
the xilinx-zynqmp BSP. Additional information can be found in the Wind
River Linux documentation 'Wind River Linux OverC Virtualization
Features Guide'.


Building
---
1) Configure your build area using setup.sh:
  $ ./wrlinux-x/setup.sh --machines=xilinx-zynqmp \
  --distros=wrlinux-overc \
  --dl-layers \
  --no-recommend

2) Run the environment-setup script from the project directory:
  $ . ./environment-setup-x86_64-wrlinuxsdk-linux

3) Run the oe-init-build-env script:
  $ . ./oe-init-build-env
or with a build directory specified
  $ . ./oe-init-build-env <newBuildDir>

4) Complete the build:
  $ bitbake cube-vrf cube-dom0 cube-essential cube-server \
     cube-builder-initramfs


Create a Disk Image
---
Starting in your build directory you created above.

Before you start be sure you have 'btrfs-progs' installed for your
host distro:
  $ sudo apt-get install btrfs-progs

1) Build native tools required to run the installer:
  $ bitbake grub-native jq-native parted-native dosfstools-native btrfs-tools-native
  $ bitbake build-sysroots

2) Copy the OverC image configurations from the platform project directory:
  $ cp ../layers/wrlinux/wrlinux-overc/bin/* .

3) Edit the configuration for the xilinx-zynqmp BSP.
  a) Add FIRMWARE_INSTALL=""
  b) Update SCREEN_GETTY_CONSOLE to use ttyPS0
  c) Update INSTALL_BSP to xilinx-zynqmp
  d) Add X86_ARCH=false

  You can cut and paste the follow command to accomplish this:

  $ sed -i -e 's#ttyS0#ttyPS0#' \
            -e 's#^\(INSTALL_BSP=\).*$#\1\"xilinx-zynqmp\"#' \
            -e "/GETTY_CONSOLE=/aFIRMWARE_INSTALL=\"\"" \
            -e "/GETTY_CONSOLE=/aX86_ARCH=false" \
            -e "/GETTY_CONSOLE=/aBOARD_NAME=\"xilinx-zynq\"" \
            -e "/GETTY_CONSOLE=/aINSTALL_DTB=\"\${ARTIFACTS_DIR}\/zynqmp-zcu102-rev1.0.dtb\"" \
            -e "/GETTY_CONSOLE=/aINSTALL_BOOTLOADER=\"\${ARTIFACTS_DIR}\/BOOT.BIN\"" \
            image-live.sh

4) Copy boot firmware image(BOOT.BIN, which can be downloaded with SDK) to artifact directory.

5) Run the installer:
  $ sudo \
   PATH=$PWD/tmp/sysroots/x86_64/usr/bin:$PWD/tmp/sysroots/x86_64/usr/sbin:$PATH \
   ../overc-installer/sbin/cubeit --disk-size 15G --force \
   --config `pwd`/image-live.sh \
   --artifacts `pwd`/tmp/deploy/images/xilinx-zynqmp boot.img


Running with the Image
---
dd the boot.img to a SD card and boot the target board from SD car with
following instruction in u-boot:

ZynqMP>setenv bootfile Image; setenv fdtfile dtb;  setenv loadaddr 0x10000000; setenv fdtaddr 0x11800000;
ZynqMP>setenv bootargs 'root=/dev/mmcblk0p3 rw rootdelay=5 console=ttyPS0,115200n8 initcall_blacklist=init_yaffs_fs'
ZynqMP>setenv bootcmd 'fatload mmc 0:1 $loadaddr $bootfile; fatload mmc 0:1 $fdtaddr $fdtfile; booti $loadaddr - $fdtaddr'
ZynqMP>run bootcmd

You can use 'ctrl+w #' to switch between essential (where # = 0), dom0
(where # = 1) and cube-server (where # = 2) gettys. Since this makes
use of screen, using 'ctrl+"' will list the available sessions. You
can also use a VNC viewer like gvncviewer to connect to the VM,
switching between ptys 0, 1 and 2 will similarly get you to essential,
dom0 and cube-server.
