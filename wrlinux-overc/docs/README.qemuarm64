                           OverC on the qemuarm64 BSP
			   --------------------------

Introduction
---

The following provides information for building and running OverC on
the qemuarm64 BSP. Additional information can be found in the Wind
River Linux documentation 'Wind River Linux OverC Virtualization
Features Guide'.


Building
---
1) Configure your build area using setup.sh:
  %> ./wrlinux-x/setup.sh --machines=qemuarm64 \
  --distros=wrlinux-overc \
  --dl-layers \
  --no-recommend

2) Run the environment-setup script from the project directory:
  %> . ./environment-setup-x86_64-wrlinuxsdk-linux

3) Run the oe-init-build-env script:
  %> . ./oe-init-build-env
or with a build directory specified
  %> . ./oe-init-build-env <newBuildDir>

4) Complete the build:
  %> bitbake cube-vrf cube-dom0 cube-essential cube-server \
     cube-builder-initramfs


Create a Disk Image
---
Starting in your build directory you created above.

Before you start be sure you have 'btrfs-progs' installed for your
host distro:
  %> sudo apt-get install btrfs-progs

1) Build native tools required to run the installer:
  %> bitbake grub-native jq-native parted-native dosfstools-native
  %> bitbake build-sysroots

2) Copy the OverC image configurations from the platform project directory:
  %> cp ../layers/wrlinux/wrlinux-overc/bin/* .

3) Edit the configuration for the qemuarm64 BSP.
  a) Add FIRMWARE_INSTALL=""
  b) Update SCREEN_GETTY_CONSOLE to use ttyAMA0
  c) Update INSTALL_BSP to qemuarm64
  d) Add X86_ARCH=false

  You can cut and paste the follow command to accomplish this:

  %> sed -i -e 's#ttyS0#ttyAMA0#' \
            -e 's#^\(INSTALL_BSP=\).*$#\1\"qemuarm64\"#' \
            -e "/GETTY_CONSOLE=/aFIRMWARE_INSTALL=\"\"" \
            -e "/GETTY_CONSOLE=/aX86_ARCH=false" \
            image-live.sh

4) Run the installer:
  %> sudo \
   PATH=$PWD/tmp/sysroots/x86_64/usr/bin:$PWD/tmp/sysroots/x86_64/usr/sbin:$PATH \
   ../overc-installer/sbin/cubeit --disk-size 15G --force \
   --config `pwd`/image-live.sh \
   --artifacts `pwd`/tmp/deploy/images/qemuarm64 boot.img


Running with the Image
---
Run the image using runqemu from your build directory:
%> ROOTFS=boot.img runqemu slirp qemuparams="-nographic -vnc :1 -m 2G" \
   bootparams="root=/dev/vda3 mem=2G"

You can use 'ctrl+w #' to switch between essential (where # = 0), dom0
(where # = 1) and cube-server (where # = 2) gettys. Since this makes
use of screen, using 'ctrl+"' will list the available sessions. You
can also use a VNC viewer like gvncviewer to connect to the VM,
switching between ptys 0, 1 and 2 will similarly get you to essential,
dom0 and cube-server.