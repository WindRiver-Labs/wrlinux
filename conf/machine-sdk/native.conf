#
# Copyright (C) 2013 Wind River Systems, Inc.
#
# Configuration file to enable building a native SDK
#
# We avoid building nativesdk toolchain elements, and rely on
# the host system.
#

SDK_ARCH = "${BUILD_ARCH}"
SDK_VENDOR = "${BUILD_VENDOR}"
SDK_OS = "${BUILD_OS}"

HOST_SYS_virtclass-nativesdk = "${BUILD_SYS}"
TARGET_SYS_virtclass-nativesdk = "${BUILD_SYS}"

# ensure we don't add per-file dependenices to nativesdk packages
SKIP_FILEDEPS_virtclass-nativesdk = '1'

PNBLACKLIST[binutils-crosssdk] = "No NATIVESDK compiler!"
PNBLACKLIST[gcc-crosssdk-initial] = "No NATIVESDK compiler!"
PNBLACKLIST[eglibc-initial-nativesdk] = "No NATIVESDK compiler!"
PNBLACKLIST[eglibc-nativesdk] = "No NATIVESDK compiler!"
PNBLACKLIST[linux-libc-headers-nativesdk] = "No NATIVESDK compiler!"
PNBLACKLIST[eglibc-locale-nativesdk] = "No NATIVESDK compiler!"

ASSUME_PROVIDED += "virtual/libc-nativesdk"
ASSUME_PROVIDED += "virtual/.*-binutils-crosssdk"
ASSUME_PROVIDED += "virtual/.*-gcc-crosssdk"
ASSUME_PROVIDED += "virtual/.*-libc-for-gcc-nativesdk"
ASSUME_PROVIDED += "virtual/.*-g\+\+-crosssdk"
ASSUME_PROVIDED += "virtual/.*-compilerlibs-nativesdk"
ASSUME_PROVIDED += "virtual/libiconv-nativesdk"

CC_virtclass-nativesdk  = "${CCACHE}gcc ${HOST_CC_ARCH}"
CXX_virtclass-nativesdk = "${CCACHE}g++ ${HOST_CC_ARCH}"
CPP_virtclass-nativesdk = "${CCACHE}gcc -E ${HOST_CC_ARCH}"
LD_virtclass-nativesdk  = "${CCACHE}ld ${HOST_CC_ARCH}"
AR_virtclass-nativesdk  = "ar"
AS_virtclass-nativesdk  = "as ${HOST_AS_ARCH}"
RANLIB_virtclass-nativesdk = "ranlib"
STRIP_virtclass-nativesdk = "strip"
OBJCOPY_virtclass-nativesdk = "objcopy"
OBJDUMP_virtclass-nativesdk = "objdump"
NM_virtclass-nativesdk  = "nm"
SDK_CC_ARCH = ""
SDK_LD_ARCH = ""
SDK_AS_ARCH = ""
TOOLCHAIN_OPTIONS_virtclass-nativesdk = ""

