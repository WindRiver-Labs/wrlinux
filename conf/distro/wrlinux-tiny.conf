#
# Copyright (C) 2013 Wind River Systems, Inc.
#
# Distribution definition for: wrlinux-tiny
#
# wrlinux-tiny is intended to define a tiny Linux system comprised of a
# Linux kernel tailored to support each specific MACHINE and busybox.
# wrlinux-tiny sets some basic policy to ensure a usable system while still
# keeping the rootfs and kernel image as small as possible.
#
# The policies defined are intended to meet the following goals:
# o Serial consoles only (no framebuffer or VGA console)
# o Basic support for IPV4 networking
# o Single user ash shell
# o Static images (no support for adding packages or libraries later)
# o Read-only or RAMFS root filesystem
# o Combined Linux kernel + rootfs in under 4MB
#

require conf/distro/wrlinux.conf
DISTRO = "wrlinux-tiny"

# Distro config is evaluated after the machine config, so we have to explicitly
# set the kernel provider to override a machine config.
#PREFERRED_PROVIDER_virtual/kernel = "linux-windriver-tiny"

# We can use packagegroup-core-boot, but in the future we may need a new packagegroup-core-tiny
#WRLINUX_DEFAULT_EXTRA_RDEPENDS += "packagegroup-core-boot"
# Drop kernel-module-af-packet from RRECOMMENDS
WRLINUX_DEFAULT_EXTRA_RRECOMMENDS = ""

TCLIBCAPPEND = ""

# Disable wide char support for ncurses as we don't include it in
# in the LIBC features below.
ENABLE_WIDEC="false"

# Drop native language support. This removes the
# eglibc->bash->gettext->libc-posix-clang-wchar dependency.
USE_NLS="no"

# -dev packages require pkgconfig, but it pulls in glib->dbus->shadow
# which breaks with tiny's minimal libc.
# -dev packages are not currently supported on wrlinux-tiny.
ASSUME_PROVIDED += "pkgconfig$"

# Reconfigure eglibc for a smaller installation
# Comment out any of the lines below to disable them in the build
DISTRO_FEATURES_LIBC_TINY = "libc-libm libc-crypt"
DISTRO_FEATURES_LIBC_TINY_append_x86-64 = " libc-libm-big"

# Required for "who"
DISTRO_FEATURES_LIBC_MINIMAL = "libc-utmp libc-getlogin"
DISTRO_FEATURES_LIBC_REGEX = "libc-posix-regexp"
DISTRO_FEATURES_LIBC_NET = "libc-inet libc-nis"

DISTRO_FEATURES_LIBC = "${DISTRO_FEATURES_LIBC_TINY} \
                        ${DISTRO_FEATURES_LIBC_MINIMAL} \
                        ${DISTRO_FEATURES_LIBC_REGEX} \
                        ${DISTRO_FEATURES_LIBC_NET} \
                       "

# Comment out any of the lines below to disable them in the build
# DISTRO_FEATURES options:
# alsa bluetooth ext2 irda pcmcia usbgadget usbhost wifi nfs zeroconf pci
DISTRO_FEATURES_TINY = "pci"
DISTRO_FEATURES_NET = "ipv4"
DISTRO_FEATURES_USB = "usbhost"
#DISTRO_FEATURES_USBGADGET = "usbgadget"
DISTRO_FEATURES_WIFI = "wifi"

DISTRO_FEATURES = "${DISTRO_FEATURES_TINY} \
                   ${DISTRO_FEATURES_NET} \
                   ${DISTRO_FEATURES_USB} \
                   ${DISTRO_FEATURES_USBGADGET} \
                   ${DISTRO_FEATURES_WIFI} \
                   ${DISTRO_FEATURES_LIBC} \
                  "

# Use tmpdevfs and the busybox runtime services
VIRTUAL-RUNTIME_dev_manager = ""
VIRTUAL-RUNTIME_login_manager = ""
VIRTUAL-RUNTIME_init_manager = "tiny-init"
VIRTUAL-RUNTIME_keymaps = ""

# FIXME: Consider adding "modules" to MACHINE_FEATURES and using that in
# packagegroup-core-base to select modutils-initscripts or not.  Similar with "net" and
# netbase.

# By default we only support initramfs and tar.bz2. We don't build live as that
# pulls in a lot of dependencies for the live image and the installer, like
# udev, grub, etc.  These pull in gettext, which fails to build with wide
# character support. 
IMAGE_FSTYPES += "cpio.gz tar.bz2"

# Drop v86d from qemu dependency list (we support serial)
# Drop grub from meta-intel BSPs
# FIXME: A different mechanism is needed here. We could define -tiny
#        variants of all compatible machines, but that leads to a lot
#        more machine configs to maintain long term.
MACHINE_ESSENTIAL_EXTRA_RDEPENDS = ""

# The mtrace script included by eglibc is a perl script. This means the system
# will build perl in case this package is installed. Since we don't care about
# this script for the purposes of tiny, remove the dependency from here.
RDEPENDS_${PN}-mtrace_pn-eglibc = ""

INHERIT += "blacklist"
PNBLACKLIST[build-appliance-image] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-base] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-basic] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-clutter] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-directfb] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-lsb] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-lsb-dev] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-lsb-sdk] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-rt] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-rt-sdk] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-sato] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-sato-dev] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-sato-sdk] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-x11] = "not buildable with wrlinux-tiny"
PNBLACKLIST[qt4e-demo-image] = "not buildable with wrlinux-tiny"
PNBLACKLIST[core-image-weston] = "not buildable with wrlinux-tiny"
PNBLACKLIST[wrlinux-image-glibc-small] = "not buildable with wrlinux-tiny"
PNBLACKLIST[wrlinux-image-glibc-core] = "not buildable with wrlinux-tiny"
PNBLACKLIST[wrlinux-image-glibc-std] = "not buildable with wrlinux-tiny"
PNBLACKLIST[wrlinux-image-glibc-std-sato] = "not buildable with wrlinux-tiny"

# Disable python usage in opkg-utils since it won't build with tiny config
PACKAGECONFIG_pn-opkg-utils = ""
PACKAGECONFIG_pn-lib32-opkg-utils = ""
