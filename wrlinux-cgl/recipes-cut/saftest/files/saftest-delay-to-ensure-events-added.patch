Subject: [PATCH] saftest: delay to ensure events added

openhpid use a separate thread to process events and update the
event queue status. On some overload systems, this thread may have
no chance to finish processing all events in a short time.

In saftest events/saHpiEventGet/10.test, it adds 10002 events to
let the event queue overflowd. But when saHpiEventGet called,
there may be only ~5000 events processed, so the event queue does
still not overflow. As a result, the test case fails.

So, add a delay for 60s to ensure all events added.

Upstream-Status: Inappropriate [ particular test scene ]

Signed-off-by: Xin Ouyang <Xin.Ouyang@windriver.com>
---
 HPI-B.01.01/src/events/saHpiEventGet/10.c |    2 ++
 1 file changed, 2 insertions(+)

diff --git a/HPI-B.01.01/src/events/saHpiEventGet/10.c b/HPI-B.01.01/src/events/saHpiEventGet/10.c
index aaabedb..050bc81 100644
--- a/HPI-B.01.01/src/events/saHpiEventGet/10.c
+++ b/HPI-B.01.01/src/events/saHpiEventGet/10.c
@@ -29,6 +29,7 @@
  */
 #include <stdio.h>
 #include <stdlib.h>
+#include <unistd.h>
 #include "saf_test.h"
 
 SaHpiEventT new_event_1 = {
@@ -88,6 +89,7 @@ int main()
 		}
 	}
 	printf("Testing...\n");
+	sleep(60);
 	val = saHpiEventGet(session_id, TIME_OUT_VALUE, &event, &rdr,
 			    &rpt_entry, &eqs);
 	if (val != SA_OK || eqs != SAHPI_EVT_QUEUE_OVERFLOW) {
-- 
1.7.9.5

