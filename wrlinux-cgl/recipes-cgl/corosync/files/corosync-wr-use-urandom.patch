commit ace928fed64c4bebedc923951b3125f4dbe10ce2
Author: Aws Ismail <aws.ismail@windriver.com>
Date:   Fri Jun 1 12:43:03 2012 -0400

    This patch is carried over from WRL4.3 for corosync.
    It has been updated for corosync 1.4.3.
    
    Use /dev/urandom because /dev/random still blocks when
    calling corosync-keygen on target.
    
    Initially this patch was dropped but after testing
    corosync-keygen, I have decided to update it.
    
    Signed-off-by: Aws Ismail <aws.ismail@windriver.com>

--- tools/corosync-keygen.c.orig
+++ tools/corosync-keygen.c
@@ -65,11 +65,11 @@
 		}
 	}
 
-	printf ("Gathering %lu bits for key from /dev/random.\n", (unsigned long)(sizeof (key) * 8));
+	printf ("Gathering %lu bits for key from /dev/urandom.\n", (unsigned long)(sizeof (key) * 8));
 	printf ("Press keys on your keyboard to generate entropy.\n");
-	random_fd = open ("/dev/random", O_RDONLY);
+	random_fd = open ("/dev/urandom", O_RDONLY);
 	if (random_fd == -1) {
-		perror ("Is /dev/random present? Opening /dev/random");
+		perror ("Is /dev/urandom present? Opening /dev/urandom");
 		exit (errno);
 	}
 
@@ -81,7 +81,7 @@
 retry_read:
 	res = read (random_fd, &key[bytes_read], sizeof (key) - bytes_read);
 	if (res == -1) {
-		perror ("Could not read /dev/random");
+		perror ("Could not read /dev/urandom");
 		exit (errno);
 	}
 	bytes_read += res;

